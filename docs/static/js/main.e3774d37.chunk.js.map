{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","console","log","trim","length","obj","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","UseFetchGifs","GifExpertApp","categories","clear","ReactDOM","render","document","getElementById"],"mappings":"+LAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,oBAFC,mBAExCC,EAFwC,KAE3BC,EAF2B,KAc/C,OACG,sBAAMC,SATY,SAACC,GACnBA,EAAEC,iBACFC,QAAQC,IAAI,gBACRN,EAAWO,OAAOC,OAAS,IAC5BV,GAAe,SAAAW,GAAG,OAAKT,GAAL,mBAAoBS,OACtCR,EAAc,MAIjB,SACG,uBACGS,KAAK,OACLC,MAASX,EACTY,SAhBiB,SAACT,GACxBF,EAAeE,EAAEU,OAAOF,a,+BCNjBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACdC,EADc,iDACmCC,UAAWH,GAD9C,8DAEDI,MAAOF,GAFN,cAEdG,EAFc,gBAGCA,EAAKC,OAHN,uBAGbC,EAHa,EAGbA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GACpB,MAAM,CACHC,GAAKD,EAAIC,GACTC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QATnB,kBAabM,GAba,4CAAH,sDCCPO,EAAc,SAAC,GAAyB,EAAtBJ,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IACvC,OACG,sBAAKc,UAAU,oDAAf,UACG,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAMA,EAAN,WCCIO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFb,SAAEA,GAAe,IAAD,EAEfhB,mBAAS,CAChCuB,KAAM,GACNa,SAAU,IAJ4B,mBAElCC,EAFkC,KAE3BC,EAF2B,KAkBzC,OAXAC,qBAAW,WACRxB,EAASC,GACLwB,MAAM,SAAAC,GACJH,EAAS,CACNf,KAAMkB,EACNL,SAAS,SAIlB,CAACpB,IAEGqB,EDdmBK,CAAc1B,GAAhCO,EAF8B,EAE9BA,KAAMa,EAFwB,EAExBA,QAEd,OACM,qCACG,qBAAIJ,UAAU,0CAAd,UAA0DhB,EAA1D,OAEEoB,GAAW,0CAEb,qBAAKJ,UAAU,YAAf,SAEST,EAAKE,KAAM,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEatBgB,EA5BS,WAAK,IAAD,EACc3C,mBAAS,CAAC,YAAY,gBADpC,mBACf4C,EADe,KACH7C,EADG,KAQtB,OACG,qCACG,kDACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEM6C,EAAWnB,KAAK,SAAAT,GAAQ,OACrB,cAAC,EAAD,CAEGA,SAAUA,GADHA,YCjB/BV,QAAQuC,QACRC,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.e3774d37.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types' ;\n\nexport const AddCategory = ( {setCategories} ) => {\n\n   const [inputValue , setInputValue] = useState('Intro categorias') ;\n   const handleInputchange = (e) => {\n      setInputValue( e.target.value );\n   }\n   const handleSubmit = (e) => {\n      e.preventDefault();\n      console.log('Submit Hecho');\n      if( inputValue.trim().length > 2){\n         setCategories( obj =>[ inputValue, ...obj ] );\n         setInputValue('');\n      };\n   };\n   return(\n      <form onSubmit={ handleSubmit }>\n         <input\n            type=\"text\"\n            value = {inputValue}\n            onChange={  handleInputchange }\n         />\n      </form>\n\n   );\n};\n\nAddCategory.propTypes = {\n   setCategories : PropTypes.func.isRequired\n}\n","\nexport const getGifs = async ( category ) =>{\n   const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=5&api_key=ckQH4Ud1wKjsL3Shq4ZniKF4832FArvM`;\n   const resp = await fetch( url );\n   const {data} = await resp.json() ;\n\n   const gifs = data.map( img => {\n      return{\n         id : img.id,\n         title: img.title,\n         url: img.images.downsized_medium.url\n      };\n   });\n\n   return gifs ;\n} ;\n","import React from 'react';\n\nexport const GifGridItem = ( { id, title, url } ) => {\n   return (\n      <div className=\"card animate__animated animate__lightSpeedInRight\">\n         <img src={ url } alt={ title }/>\n         <p> { title } </p>\n      </div>\n   )\n};\n","import React from 'react';\n// componentes:\nimport {UseFetchGifs}from '../hooks/useFetchGifs' ;\nimport {GifGridItem} from './GifGridItem' ;\n\n// import PropTypes from 'prop-types';\n\nexport const GifGrid = ( {category} ) => {\n\n   const { data, loading } = UseFetchGifs( category );\n\n   return (\n         <>\n            <h3 className=\"animate__animated animate__slideInDown \">{ category } </h3>\n\n            { loading && <p> Loading </p> }\n\n            <div className=\"card-grid\">\n                  {\n                     data.map ( img =>\n                        <GifGridItem\n                           key={ img.id }\n                           { ...img }\n                        />\n                     )\n                  }\n            </div>\n         </>\n   );\n};\n\n// .propTypes = {};\n","import { useState, useEffect } from 'react'\n//componente:\nimport { getGifs } from '../helpers/getGifs' ;\n\n\nexport const UseFetchGifs = ( category ) => {\n\n   const [state, setState] = useState({\n      data: [],\n      loading : true\n   });\n\n   useEffect( () =>{\n      getGifs( category )\n         .then( imgs => {\n            setState({\n               data: imgs,\n               loading: false\n            });\n         });\n\n   }, [category] ) ;\n\n   return state ; // { data:[], loading: true };\n\n\n\n};\n\n// useEffect( ()=>{\n//    getGifs( category )\n//       .then( imgs => setImages( imgs )) ; // igual a : ,then( setImages), por primer argumento enviado a funcion con un solo argumento.\n// }, [category] );\n//\n","import React, {useState} from 'react';\n// componentes:\nimport {AddCategory} from './components/AddCategory' ;\nimport {GifGrid}     from './components/GifGrid' ;\n\n\n   const GifExpertApp = ()=>{\n      const [categories, setCategories] = useState(['One Punch','Dargon ball']);\n\n      // const handleAdd = () => {\n      //    // setCategories( ['Hunter', ...categories] );\n      //    setCategories( obj =>[ 'Hunter',...obj] );\n      // }\n\n      return (\n         <>\n            <h1> Gif Expert App </h1>\n            <AddCategory setCategories={ setCategories } />\n            <hr />\n\n            <ol>\n               {\n                  categories.map( category =>\n                     <GifGrid\n                        key = {category}\n                        category={category}\n                     />\n                  )\n               }\n            </ol>\n         </>\n      );\n   };\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n// Componentes:\nimport GifExpertApp from './GifExpertApp';\n\nconsole.clear();\nReactDOM.render(<GifExpertApp />, document.getElementById('root') );\n"],"sourceRoot":""}